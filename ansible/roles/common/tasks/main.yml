---
# Author Shanmugathas Vigneswaran
# tasks file for platform

- name: Enable all hardware features (i2c uart ...)
  lineinfile:
    dest: /boot/armbianEnv.txt
    line: "{{ item.env }}='{{ item.value }}'"
    regexp: "^{{ item.env }}="
    state: present
  loop:
    - {
      env: overlays,
      value: uart1 uart2
    }
  register: armbian_env

- name: Waiting for reboot because /boot/armbianEnv.txt has changed
  reboot:
    reboot_timeout: 300 # wait 5min
  when: armbian_env.changed

- name: Clean node agent
  block:
    - name: clean /tmp
      shell: /bin/rm -rf /tmp/*
    - name: clean logs
      shell: /bin/rm -f /var/log/*/*.log
    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes

- name: Install apt binaries ...
  apt:
    name:
      - sqlite3
      - wget
      - npm
    state: present
    update_cache: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Setup Python {{python_version}} (operation can take time ~15 min)
  block:
    - name: Check python{{ python_major }} exist
      shell: "{{ app_python }} --version"
  rescue:
    - name: download python {{ python_version }} to /opt/python/{{ python_version }}
      ansible.builtin.unarchive:
        src: https://github.com/One-Green/build-binaries/raw/master/orange-pi-zero2/debian-10/python/{{ python_version }}/{{ python_version }}.zip
        dest: /opt/python/
        remote_src: yes
    - name: Change
      file: path={{ item }} owner=root group=root mode=a+x
      with_items:
        - /opt/python/{{ python_version }}/bin/python{{ python_major }}
        - /opt/python/{{ python_version }}/bin/pip{{ python_major }}
    - name: clean /tmp/*
      shell: rm -rv /tmp/* || true

- name: Ensure pm2 is installed
  block:
    - name: Check pm2 exist
      shell: "which pm2"
  rescue:
    - name: Install "pm2" node.js package globally
      community.general.npm:
        name: pm2
        global: yes

- name: pm2 autostart node agent at startup
  shell: "pm2 startup"

- name: "Git clone iot-edge-agent version: {{ iot_edge_agent.version}} > {{ iot_edge_agent.dest }}"
  ansible.builtin.git:
    repo: "{{ iot_edge_agent.repo }}"
    dest: "{{ iot_edge_agent.dest }}"
    version: "{{ iot_edge_agent.version }}"
  tags:
    - change-version

- name: Install Python requirements
  shell: "{{ app_pip }} install -r {{ iot_edge_agent.dest }}/requirements.txt"
