---
# Author Shanmugathas Vigneswaran
# tasks file for platform

- name: Enable all hardware features (i2c uart ...)
  lineinfile:
    dest: /boot/armbianEnv.txt
    line: "{{ item.env }}='{{ item.value }}'"
    regexp: "^{{ item.env }}="
    state: present
  loop:
    - {
      env: overlays,
      value: analog-codec cir i2c0 i2c1 i2c2 pps-gpio pwm spdif-out spi-add-cs1 spi-jedec-nor spi-spidev uart1 uart2 uart3 usbhost0 usbhost1 usbhost2 usbhost3 w1-gpio
    }
  register: armbian_env

- name: Waiting for reboot because /boot/armbianEnv.txt has changed
  reboot:
    reboot_timeout: 300 # wait 5min
  when: armbian_env.changed

- name: Clean node agent
  block:
    - name: clean /tmp
      shell: /bin/rm -rf /tmp/*
    - name: clean logs
      shell: /bin/rm -f /var/log/*/*.log
    - name: Remove dependencies that are no longer required
      apt:
        autoremove: yes

- name: Install binaries (python,pip,sqlite3...)
  apt:
    name:
      - python3.8-dev
      - python3.8-distutils
      - sqlite3
      - wget
      - lsb-core
    state: present
    update_cache: yes
  when: ansible_facts['os_family'] == "Debian"

- name: Install Pip
  block:
    - name: Check pip3.8 exist
      shell: "which pip3.8"
  rescue:
    - name: Get Pip
      get_url:
        url: https://bootstrap.pypa.io/get-pip.py
        dest: /tmp/get-pip.py
    - name: Install Pip
      shell: python3.8 /tmp/get-pip.py

- name: Ensure pm2 is installed
  block:
    - name: Check pm2 exist
      shell: "which pm2"
  rescue:
    - name: Resize /tmp 246M > 500M
      shell: "mount -o remount,size=500M /tmp/"
    - name: Install pm2
      shell: "wget -qO- https://getpm2.com/install.sh | bash"
    - name: clean /tmp
      shell: "/bin/rm -rf /tmp/*"
    - name: "Resize /tmp 500M > 246M"
      shell: "mount -o remount,size=246M /tmp/"

- name: pm2 autostart node agent at startup
  shell: "pm2 startup"

- name: "Git clone iot-edge-agent version: {{ iot_edge_agent.version}} > {{ iot_edge_agent.dest }}"
  ansible.builtin.git:
    repo: "{{ iot_edge_agent.repo }}"
    dest: "{{ iot_edge_agent.dest }}"
    version: "{{ iot_edge_agent.version }}"
  tags:
    - change-version

- name: Install Python requirements
  shell: "pip3.8 install -r {{ iot_edge_agent.dest }}/requirements.txt && pip3.8 install OPi.GPIO"
